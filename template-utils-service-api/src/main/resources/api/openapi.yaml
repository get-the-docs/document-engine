openapi: 3.0.3
info:
  contact:
    email: oss.levente.ban@gmail.com
    name: Levente Ban
  description: "API for listing available templates, and impersonating."
  title: Document generation API
  version: 1.0.1
servers:
  - url: https://localhost:8080/api/v1
tags:
  - name: templates
    description: Template element
    externalDocs:
      url: "https://www.getthedocs.tech/docs/documentation/components"
  - name: documentstructures
    description: Document structures
    externalDocs:
      url: "https://www.getthedocs.tech/docs/documentation/components"
paths:
  /template:
    get:
      tags:
        - templates    
      operationId: "getTemplates"
      summary: "Lists the available document templates."
      x-contentType: application/json
      x-accepts: application/json
      parameters:
        - $ref: "#/components/parameters/pageable"
      responses:
        "200":
          description: "Request processed successfully and data is present."
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetTemplatesResponse"
        "400":
          description: Invalid DTO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "401":
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"

  /template/{id}:
    get:
      tags:
        - templates    
      operationId: "getTemplateById"
      summary: "Returns a given document template."
      x-contentType: application/json
      x-accepts: application/json
      parameters:
        - name: id
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/TemplateElementId"
        - name: version
          in: query
          required: false
          schema:
            type: string
            minLength: 0
            maxLength: 4000
            pattern: "^[a-zA-Z0-9_/\\]*$"
      responses:
        "200":
          description: Default
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDocument"
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateDocument"
        "401":
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
    post:
      tags:
        - templates    
      operationId: postTemplateGenerationJob
      summary: Posts a template generation with the given data
      x-contentType: application/json
      x-accepts: application/json
      parameters:
        - name: id
          description: "Posts a single template generation."
          examples:
            contract:
              value: "integrationtests.contracts:contract_v09_hu.docx"
          explode: true
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/TemplateElementId"
      requestBody:
        description: data provided for generation
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TemplateContext"
      responses:
        "202":
          description: Default
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateJobApiResponse"
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TemplateJobApiResponse"
        "400":
          description: Invalid DTO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "401":
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "404":
          description: Template not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"


  /documentstructure:
    get:
      tags:
        - documentstructures    
      operationId: "getDocumentStructures"
      summary: "Lists the available document structures."
      x-contentType: application/json
      x-accepts: application/json
      parameters:
        - $ref: "#/components/parameters/pageable"
      responses:
        "200":
          description: Default
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDocumentStructuresResponse"
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/GetDocumentStructuresResponse"
        "400":
          description: Invalid DTO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "401":
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"

  /documentstructure/{id}:
    get:
      tags:
        - documentstructures    
      operationId: "getDocumentStructureById"
      summary: "Returns a given document structure."
      x-contentType: application/json
      x-accepts: application/json
      parameters:
        - name: id
          description: document structure id in the document structure repository
          explode: true
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DocumentStructureId"
      responses:
        "200":
          description: "Default"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentStructure"
        default:
          description: "Default"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocumentStructure"
        "400":
          description: "Invalid DTO"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "401":
          description: "Bad credentials"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "403":
          description: "Forbidden"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "404":
          description: "Not found"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
        "429":
          description: "Too many requests"
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/EmptyResponse"
    post:
      tags:
        - documentstructures
      operationId: postDocumentStructureGenerationJob
      description: Posts data for a document structure to be generated.
      parameters:
        - name: id
          description: document structure id in the document structure repository
          explode: true
          in: path
          required: true
          schema:
            $ref: "#/components/schemas/DocumentStructureId"
      requestBody:
        description: Data provided for generation
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ValueSet"
      responses:
        "202":
          description: Default
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocStructureJobApiResponse"
        default:
          description: Default
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DocStructureJobApiResponse"
        "400":
          description: Invalid DTO
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseApiResponse"
        "401":
          description: Bad credentials
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseApiResponse"
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseApiResponse"
        "404":
          description: Template not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseApiResponse"
        "429":
          description: Too many requests
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/BaseApiResponse"
      summary: Posts a template generation with the given data
      x-contentType: application/json
      x-accepts: application/json

components:
  schemas:

    # Common schema types.
    # --------------------
    EmptyResponse:
      type: object
      description: "Generic empty response."
      additionalProperties: false

    EntityIdResponse:
      type: object
      description: "Generic empty response."
      additionalProperties: false
      properties:
        id:
          type: string
          description: "id"
          maxLength: 36
          minLength: 36
          pattern: '^[0-9a-f]{8}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{4}-[0-9a-f]{12}$'
          example: "be5d2c3b-6235-4b86-95b6-88d64610e0d3"

    ErrorResponse:
      type: object
      description: "Generic error response additional data container object."
      additionalProperties: true
      properties:
        timestamp:
          type: string
          description: "Request timestamp"
          format: date-time
          maxLength: 21
        message:
          type: string
          description: "Error message"
          maxLength: 256
          example: "Request processing error."
          pattern: '^[0-9a-zA-Z.-/_]+$'

    ValidationErrorField:
      type: object
      description: "Container for request validation-based errors."
      additionalProperties: false
      properties:
        fieldRef:
          type: string
          description: "Field name"
          minLength: 0
          maxLength: 4000
          pattern: '^[0-9a-zA-Z.-/_]+$'
          example: "data.name"
        message:
          type: string
          description: "Validation error - code/message"
          minLength: 0
          maxLength: 4000
          pattern: '^[0-9a-zA-Z.-/_]+$'
          example: "Must be unique."
          
    ValidationErrorResponse:
      additionalProperties: true
      allOf:
      - $ref: '#/components/schemas/ErrorResponse'
      - properties:
          errors:
            type: array
            description: "List of the fields having validation errors."
            items:
              $ref: '#/components/schemas/ValidationErrorField'
            maxItems: 32768
        type: object

    Pageable:
      type: object
      description: "Pageable query parameters"
      additionalProperties: false
      properties:
        page:
          type: integer
          description: "The page to be returned."
          format: int32
          minimum: 0
          maximum: 32768
          default: 0
          example: 0
        size:
          type: integer
          description: "The number of items to be returned."
          format: int32
          minimum: 0
          maximum: 32768
          default: 10
          example: 10
        paged:
          type: boolean
          description: "Returns whether the current Pageable contains pagination information."
          default: true
        sort:
          type: array
          description: "Sort orders in the format fieldname,asc|desc. You may define multiple sort criteria."
          items:
            type: string
            format: "^([a-zA-Z0-9_-]*,asc|desc)*$"
            minLength: 0
            maxLength: 4096
            pattern: "^([a-zA-Z0-9_-]*,asc|desc)*$"
          minItems: 0
          maxItems: 64

    Page:
      type: object
      description: "A page is a sublist of a list of objects. It allows gain information about the position of it in the containing entire list."
      properties:
        totalPages:
          type: integer
          description: "Returns the number of total pages."
          format: uint32
          minimum: 0
          maximum: 32768
          default: 0
          example: 2
        totalElements:
          type: integer
          description: "Returns the total amount of elements."
          format: int64
          minimum: 0
          default: 0
          example: 18
          maximum: 2147483647
        number:
          type: integer
          description: "Returns the number of the current Slice. Is always non-negative."
          format: uint32
          minimum: 0
          maximum: 32768
          default: 0
          example: 1
        size:
          type: integer
          description: "Returns the number of elements currently on this Slice."
          format: uint32
          minimum: 0
          default: 8
          maximum: 32768
        numberOfElements:
          type: integer
          description: "Returns the number of elements currently on this Slice."
          format: uint32
          minimum: 0
          maximum: 32768
          default: 0
          example: 8

    # API specific types.
    # -------------------

    BaseApiResponse:
      type: object
      additionalProperties: false
      properties:
        requestContext:
          type: string
          minLength: 0
          maxLength: 4000
          pattern: "^[a-zA-Z0-9_/\\]*$"
          format: uri
        errorFlag:
          type: boolean
        timestamp:
          type: string
          format: date-time
          maxLength: 21

    TemplateElementId:
      type: string
      minLength: 0
      maxLength: 4000
      pattern: "^[a-zA-Z0-9_\\/-]*$"

    TemplateDocument:
      type: object
      additionalProperties: false
      properties:
        templateName:
          type: string
          minLength: 0
          maxLength: 4000
          pattern: "^[a-zA-Z0-9_/\\]*$"
        format:
          type: string
          minLength: 0
          maxLength: 50
          pattern: "^[a-zA-Z0-9_/\\]*$"
          enum: [DOCX, XLSX]  
        locale:
          type: string
          minLength: 0
          maxLength: 50
          pattern: "^[a-zA-Z0-9_-/]*$"
        version:
          type: string
          minLength: 0
          maxLength: 4000
          pattern: "^[a-zA-Z0-9_/\\]*$"
        internalKey:
          type: string
          minLength: 0
          maxLength: 4000
          pattern: "^[a-zA-Z0-9_/\\]*$"

    TemplateElement:
      type: object
      additionalProperties: false
      properties:
        templateElementId:
          $ref: "#/components/schemas/TemplateElementId"
        templateNames:
          items:
            type: string
            minLength: 0
            maxLength: 4000
            pattern: "^[a-zA-Z0-9_/\\]*$"
          type: array
          maxItems: 32767
        inputFormat:
          type: string
          minLength: 0
          maxLength: 50
          pattern: "^[a-zA-Z0-9_/\\]*$"
          enum: [DOCX, XLSX]  
        defaultLocale:
          type: string
          minLength: 0
          maxLength: 50
          pattern: "^[a-zA-Z0-9_-/]*$"
        count:
          type: integer
          minimum: 0
          maximum: 32768

    DocumentStructureId:
      type: string
      minLength: 0
      maxLength: 4000
      pattern: "^[a-zA-Z0-9_\\/-]*$"
      example: 050bca79-5aba-4e32-a34d-9409edcb0a68

    DocumentStructure:
      type: object
      additionalProperties: false
      properties:      
        documentStructureId:
          $ref: "#/components/schemas/DocumentStructureId"
        elements:
          items:
            $ref: "#/components/schemas/TemplateElement"
          type: array
          maxItems: 32767
        resultMode:
          type: string
          minLength: 0
          maxLength: 50
          pattern: "^[a-zA-Z0-9_/\\]*$"
          enum: [SEPARATE_DOCUMENTS, SINGLE_OUTPUT]
        copies:
          type: integer
          minimum: 0
          maximum: 32768

    ValueSet:
      type: object
      additionalProperties: false
      properties:
        documentStructureId:
          $ref: "#/components/schemas/DocumentStructureId"
        transactionId:
          type: string
          minLength: 0
          maxLength: 4000
          example: contracts-54f9b669-d582-4049-95de-9fded66b884f
        locale:
          type: string
          minLength: 0
          maxLength: 10
          example: en_US
        values:
          items:
            $ref: "#/components/schemas/ValueSetItem"
          type: array
          maxItems: 32767

    ValueSetItem:
      type: object
      additionalProperties: false
      properties:
        templateElementId:
          $ref: "#/components/schemas/TemplateElementId"
        value:
          $ref: "#/components/schemas/TemplateContext"

    TemplateContext:
      type: object

    GetTemplatesResponse:
      type: object
      description: "Response type for returning the available templates"
      additionalProperties: false 
      properties:
        page:
          $ref: '#/components/schemas/Page'

        contents:
          type: array
          description: "List of template elements."
          items:
            $ref: '#/components/schemas/TemplateDocument'
          maxItems: 32768


    TemplateJobApiResponse:
      type: object
      additionalProperties: false
      properties:
        transactionId:
          type: string
          minLength: 0
          maxLength: 4000
          pattern: "^[a-zA-Z0-9_\\/-]*$"
        message:
          type: string
          minLength: 0
          maxLength: 4000
          pattern: "^[a-zA-Z0-9_/\\]*$"
    
    GetDocumentStructuresResponse:
      description: "Response type for returning the available templates"
      additionalProperties: true 
      allOf:
      - $ref: '#/components/schemas/Page'
      - type: object
        properties:
          contents:
            type: array
            description: "List of template elements."
            items:
              $ref: '#/components/schemas/DocumentStructure'
            maxItems: 32768

    DocStructureJobApiResponse:
      type: object
      additionalProperties: false
      properties:
        transactionId:
          type: string
          minLength: 0
          maxLength: 4000
          pattern: "^[a-zA-Z0-9_\\/-]*$"
        message:
          type: string
          minLength: 0
          maxLength: 4000
          pattern: "^[a-zA-Z0-9_/\\]*$"

  parameters:
    pageable:
      in: query
      name: pageable
      required: false
      schema:
        $ref: '#/components/schemas/Pageable'



  securitySchemes:
    ApiKeyAuth:        
      type: apiKey
      in: header       
      name: X-API-KEY  

security:
  - ApiKeyAuth: []
